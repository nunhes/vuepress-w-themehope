export const data = JSON.parse("{\"key\":\"v-277874b6\",\"path\":\"/posts/html/2.html\",\"title\":\"Como armar unha aplicación web con Parcel.js\",\"lang\":\"en-US\",\"frontmatter\":{\"icon\":\"edit\",\"date\":\"2022-01-02T00:00:00.000Z\",\"category\":[\"HTML\",\"Fruit\"],\"tag\":[\"html\",\"www\",\"deseño web\"],\"star\":true,\"description\":\"Como armar unha aplicación web con Parcel.js Como armar unha aplicación web con Parcel.js Introdución Ao desenvolver un sitio ou unha aplicación web, é unha boa práctica separar o código en anacos máis pequenos e máis manexables. En produción, solicitar todos os teus recursos individualmente pode enlentecer a túa aplicación. Un bundler é unha ferramenta que se usa para resolver este problema de latencia combinando e fusionando o teu código nun único arquivo. Isto limita a cantidade de solicitudes HTTP a un servidor a conta deses recursos. Usar un empaquetador de paquetes é útil para optimizar a experiencia tanto para o usuario como para o programador.\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://ambosass.com/megaboot/posts/html/2.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"DAW\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Como armar unha aplicación web con Parcel.js\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"Como armar unha aplicación web con Parcel.js Como armar unha aplicación web con Parcel.js Introdución Ao desenvolver un sitio ou unha aplicación web, é unha boa práctica separar o código en anacos máis pequenos e máis manexables. En produción, solicitar todos os teus recursos individualmente pode enlentecer a túa aplicación. Un bundler é unha ferramenta que se usa para resolver este problema de latencia combinando e fusionando o teu código nun único arquivo. Isto limita a cantidade de solicitudes HTTP a un servidor a conta deses recursos. Usar un empaquetador de paquetes é útil para optimizar a experiencia tanto para o usuario como para o programador.\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:image\",\"content\":\"https://ambosass.com/megaboot/\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"en-US\"}],[\"meta\",{\"name\":\"twitter:card\",\"content\":\"summary_large_image\"}],[\"meta\",{\"name\":\"twitter:image:alt\",\"content\":\"Como armar unha aplicación web con Parcel.js\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"html\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"www\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"deseño web\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2022-01-02T00:00:00.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Como armar unha aplicación web con Parcel.js\\\",\\\"image\\\":[\\\"https://ambosass.com/megaboot/\\\"],\\\"datePublished\\\":\\\"2022-01-02T00:00:00.000Z\\\",\\\"dateModified\\\":null,\\\"author\\\":[]}\"]]},\"headers\":[{\"level\":3,\"title\":\"Introdución\",\"slug\":\"introducion\",\"link\":\"#introducion\",\"children\":[]},{\"level\":2,\"title\":\"Requisitos previos\",\"slug\":\"requisitos-previos\",\"link\":\"#requisitos-previos\",\"children\":[]},{\"level\":2,\"title\":\"Paso 1 - Instalación do xestor de paquetes\",\"slug\":\"paso-1-instalacion-do-xestor-de-paquetes\",\"link\":\"#paso-1-instalacion-do-xestor-de-paquetes\",\"children\":[]},{\"level\":2,\"title\":\"Paso 2 - Creación dos arquivos da aplicación\",\"slug\":\"paso-2-creacion-dos-arquivos-da-aplicacion\",\"link\":\"#paso-2-creacion-dos-arquivos-da-aplicacion\",\"children\":[]},{\"level\":2,\"title\":\"Paso 3: executar a aplicación nun servidor de desenvolvemento\",\"slug\":\"paso-3-executar-a-aplicacion-nun-servidor-de-desenvolvemento\",\"link\":\"#paso-3-executar-a-aplicacion-nun-servidor-de-desenvolvemento\",\"children\":[]},{\"level\":2,\"title\":\"Paso 4: creación de scripts npm para iniciar e construír a túa aplicación\",\"slug\":\"paso-4-creacion-de-scripts-npm-para-iniciar-e-construir-a-tua-aplicacion\",\"link\":\"#paso-4-creacion-de-scripts-npm-para-iniciar-e-construir-a-tua-aplicacion\",\"children\":[]},{\"level\":2,\"title\":\"Paso 5: Crear aplicación para produción\",\"slug\":\"paso-5-crear-aplicacion-para-producion\",\"link\":\"#paso-5-crear-aplicacion-para-producion\",\"children\":[]},{\"level\":2,\"title\":\"Conclusión\",\"slug\":\"conclusion\",\"link\":\"#conclusion\",\"children\":[]}],\"readingTime\":{\"minutes\":10,\"words\":3001},\"filePathRelative\":\"posts/html/2.md\",\"localizedDate\":\"January 2, 2022\",\"excerpt\":\"<h1> Como armar unha aplicación web con Parcel.js</h1>\\n<figure><figcaption>Como armar unha aplicación web con Parcel.js</figcaption></figure>\\n<h3> Introdución</h3>\\n<p>Ao desenvolver un sitio ou unha aplicación web, é unha boa práctica <strong>separar o código en anacos máis pequenos e máis manexables</strong>. En produción, solicitar todos os teus recursos individualmente pode enlentecer a túa aplicación. Un <em>bundler</em> é unha ferramenta que se usa para resolver este problema de latencia combinando e fusionando o teu código nun único arquivo. Isto limita a cantidade de solicitudes HTTP a un servidor a conta deses recursos. Usar un <em>empaquetador de paquetes</em> é útil para optimizar a experiencia tanto para o usuario como para o programador.</p>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
